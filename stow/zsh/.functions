# Taskwarrior functions
t(){
	echo "tk  : Show tasks"
	echo "tka : Add task"
	echo "tke : Edit task"
	echo "tkd : Delete task"
	echo "tkm : Modify task"
	echo "tkmd: Modify task due time"
	echo "tkmp: Modify task project"
}
tkd(){
	clear
	task delete "$@"
	task
}
tka(){
	clear
	task add "$@"
	task
}
tke(){
	clear
	task "$@" edit
}
tkm(){
	clear
	TASK_ID="$1"
	shift
	task "$TASK_ID" modify "$@"
	task
}
tkmd(){
	clear
	TASK_ID="$1"
	shift
	task "$TASK_ID" modify due:"$@"
	task
}
tkmp(){
	clear
	TASK_ID="$1"
	shift
	task "$TASK_ID" modify project:"$@"
	task
}

# Take bibtex input from clipboard and replace the key with a new prompted key.
# Append that bibtex entry to the provided file.
clip_to_bib(){
	FILE="$1"
	xsel -o > /tmp/bib.txt
	printf "\n" >> /tmp/bib.txt
	KEY=$(rofi -dmenu -p "Enter bib key")
	sed -i "s/\(@.*{\).*,/\1${KEY},/g" /tmp/bib.txt
	cat /tmp/bib.txt >> "$FILE"
	echo "$KEY" | tr -d '\n' | xclip -selection clipboard
}
# change working dir of current tmux session 
function tcd { 
    tmux command-prompt -I $PWD "attach -c %1" 
}

# Add bookmark
add_bm(){
	xclip -o -selection clipboard | xargs -I % printf "%\n" >> ~/.dotfiles/bookmarks
}

# Dirty hack to get a PDF title from mupdf's X window title
get_key(){
	KEY=$(wmctrl -l | grep $(printf "%x" $(xdotool search --pid $(pgrep mupdf))) | cut -d ' ' -f 5 | sed 's/\.pdf$//g')
	echo "$KEY"
	echo "$KEY" | xclip -selection clipboard
}

catpdf(){
	pdftotext -layout "$@" -
}

# Deactivate python venv, needed for dirty hack
# Usually provided when sourcing .venv/bin/activate
deactivate () {
	if [ -n "${_OLD_VIRTUAL_PATH:-}"  ]
	then
		PATH="${_OLD_VIRTUAL_PATH:-}" 
		export PATH
		unset _OLD_VIRTUAL_PATH
	fi
	if [ -n "${_OLD_VIRTUAL_PYTHONHOME:-}"  ]
	then
		PYTHONHOME="${_OLD_VIRTUAL_PYTHONHOME:-}" 
		export PYTHONHOME
		unset _OLD_VIRTUAL_PYTHONHOME
	fi
	if [ -n "${BASH:-}" -o -n "${ZSH_VERSION:-}"  ]
	then
		hash -r
	fi
	if [ -n "${_OLD_VIRTUAL_PS1:-}"  ]
	then
		PS1="${_OLD_VIRTUAL_PS1:-}" 
		export PS1
		unset _OLD_VIRTUAL_PS1
	fi
	unset VIRTUAL_ENV
	if [ ! "${1:-}" = "nondestructive"  ]
	then
		unset -f deactivate
	fi
}

# With every spawned shell, reset my custom auto-logout 
touch /tmp/session_age

# Extract archives
extract () {
     if [ -f $1 ] ; then
         case $1 in
             *.tar.bz2)   tar xjf $1        ;;
             *.tar.gz)    tar xzf $1     ;;
             *.bz2)       bunzip2 $1       ;;
             *.rar)       rar x $1     ;;
             *.gz)        gunzip $1     ;;
             *.tar)       tar xf $1        ;;
             *.tbz2)      tar xjf $1      ;;
             *.tgz)       tar xzf $1       ;;
             *.zip)       unzip $1     ;;
             *.Z)         uncompress $1  ;;
             *.7z)        7z x $1    ;;
	     *.tar.xz)    tar -xf $1 ;;
             *)           echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}
